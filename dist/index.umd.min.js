var MyPackage=function(e,t,n){"use strict";function r(e){return e instanceof t.GraphQLObjectType}function i(e){return e instanceof t.GraphQLScalarType}function a(e){if(!e)return;const[t,r]=e.split("#");return n.imp(`${r}@${t}`)}return e.isObjectType=r,e.isScalarType=i,e.plugin=async(e,c,s)=>{const{scalarTypePolicies:o={}}=s||{};function l(e){let n=e.type;return t.isNonNullType(n)&&(n=n.ofType),i(n)&&void 0!==o[n.name]}return{content:await n.code`
    export const scalarTypePolicies = {
      ${Object.values(e.getTypeMap()).filter(r).filter((e=>!e.name.startsWith("__"))).filter((e=>Object.values(e.getFields()).some(l))).map((e=>n.code`${e.name}: { fields: { ${Object.values(e.getFields()).filter(l).map((e=>{let r=e.type;return t.isNonNullType(r)&&(r=r.ofType),n.code`${e.name}: ${a(o[r.name])},`}))} } },`))}
    };
  `.toStringWithImports()}},e.toImp=a,e}({},graphql,tsPoet);
